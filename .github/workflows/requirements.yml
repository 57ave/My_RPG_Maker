name: requirement

on:
  push:
    branches-ignore:
      - "ga-ignore-**"
  pull_request:
    branches-ignore:
      - "ga-ignore-**"

env:
  MIRROR_URL: git@github.com:EpitechPromo2028/B-MUL-200-PAR-2-1-myrpg-gustave.delecroix.git
  EXECUTABLES: ./myrpg

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: 
      image : ghcr.io/epitech/coding-style-checker:latest
    env:
      REPORT_FILENAME: coding-style-reports.log
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checking coding-style

        run: |
          check.sh $(pwd) $(pwd)
          cat $REPORT_FILENAME | while read LINE; do
              TYPE=$(echo $LINE | cut -d ':' -f 3 | tr -d ' ')
              FILE=$(echo $LINE | cut -d ':' -f 1)
              AT=$(echo $LINE | cut -d ':' -f 2)
              ERROR=$(echo $LINE | cut -d ':' -f 4)
              echo "::error file=$FILE,line=$AT,title=$TYPE coding style error::$ERROR"
          done
          if [[ -s $REPORT_FILENAME ]]; then
            exit 1
          fi
  check_program_compilation:
    runs-on: ubuntu-latest
    needs: [check_coding_style]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Building project
        timeout-minutes: 2
        run: make
      - name: Clean
        run: make clean
      - name: check_executables
        run: |
          if [ ! -s $LIBRARY_FILENAME ]; then
            echo "::error title=Library not found::"
            exit 1
          fi
  run_tests:
    needs: [check_program_compilation]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download CSFML
        run: sudo apt-get install -y libcsfml-graphics2.5 libcsfml-audio2.5 libcsfml-system2.5 libcsfml-window2.5

      - name: Launch unit tests
        timeout-minutes: 2
        run: make tests_run
